<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
                        http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 启用AjpectJ自动代理 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>


    <!-- 启用注解式事务处理 --><!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
    <!-- 第一种方式：加载一个properties文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="12" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <!-- 本地数据源 -->
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driverClasss}"/>
        <property name="url" value="${jdbcUrl}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

    <!-- 香港数据库相关 -->
    <bean id="dataSourceHongKong" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.hongkong.driver}" />
        <property name="url" value="${jdbc.hongkong.url}" />
        <property name="username" value="${jdbc.hongkong.username}" />
        <property name="password" value="${jdbc.hongkong.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.hongkong.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.hongkong.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${jdbc.hongkong.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.hongkong.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.hongkong.maxWait}"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.web.dao"/>
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    </bean>

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.web">
        <context:exclude-filter type="annotation"
       expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="multipleDataSource"/>
    </bean>


    <!--定义数据源切换类-->
    <bean id="multipleDataSource" class="com.web.database.config.MultipleDataSource">
        <!--&lt;!&ndash; 设置默认的目标数据源 &ndash;&gt;-->
        <property name="defaultTargetDataSource" ref="myDataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="myDataSource" value-ref="myDataSource"/>
                <entry key="dataSourceHongKong" value-ref="dataSourceHongKong"/>
            </map>
        </property>

    </bean>

    <!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"/>
        <!--<property name="configLocation" value="classpath:mybatis.xml"></property>-->
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/web/mapping/*.xml"></property>

    </bean>

    <import resource="spring-activemq.xml"/>

</beans>